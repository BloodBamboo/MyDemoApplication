apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {//aop依赖库
        classpath 'org.aspectj:aspectjtools:1.8.10'
        classpath 'org.aspectj:aspectjweaver:1.8.10'
    }
}
android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.example.admin.myapplication"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [ LAUNCHER:"main" ]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }
    }
    buildTypes {
        release {
            // 混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    flavorDimensions "channel"
    productFlavors {
        //默认版本,不设置 applicationId ,继承 defaultConfig 中的配置
        flavors_default {
            dimension  "channel"
        }
        baidu {
            dimension  "channel"
            applicationId "cn.com.baidu"
            manifestPlaceholders = [ LAUNCHER:"baidu" ]
        }
        sina {
            dimension  "channel"
            applicationId "cn.com.sina"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
        }
//        dev {
//            java.srcDirs = ['src/us/java/']
//        }
        baidu {
//            jniLibs.srcDirs = ['libs-zh']
            manifest.srcFile 'src/baidu/AndroidManifest.xml'
            java.srcDirs = ['src/baidu/java/']
            res.srcDirs = ['src/baidu/res']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

//aop编译代码
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main
final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    //跳过不是debuggable的情况
//    if (!variant.buildType.isDebuggable()) {
//        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
//        return;
//    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",//java jdk版本是8
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:27.0.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:palette-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.0'
    // butterknife
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'com.zhy:percent-support-extends:1.1.1'
    implementation 'com.facebook.fresco:fresco:0.12.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation 'com.zhy:percent-support-extends:1.1.1'
    implementation('com.github.garretyoder:app-theme-engine:1.5@aar') {
        transitive = true
    }
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    implementation 'com.lovedise:permissiongen:0.0.6'
}
